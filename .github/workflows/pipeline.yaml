name: Deploy Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployType:
        description: 'Deploy type'
        type: choice
        options:
          - deploy
        required: true
      aws_account_id:
        description: 'AWS Account ID'
        type: string
        required: true
      db_aws_host:
        description: 'AWS RDS Database Host Url'
        type: string
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{github.event.inputs.deployType == 'deploy'}}
    environment: development
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Build and package Lambdas
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}}
          DB_AWS_HOST: ${{ github.event.inputs.db_aws_host }}
          AWS_ACCOUNT_ID: ${{ github.event.inputs.aws_account_id }}
        run: |
          sh ./scripts/build.sh
          sh ./scripts/deploy.sh

  update:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    environment: development
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Build and update Lambdas
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}}
          DB_AWS_HOST: ${{ github.event.inputs.db_aws_host }}
          AWS_ACCOUNT_ID: ${{ github.event.inputs.aws_account_id }}
        run: |
          sh ./scripts/build.sh
          sh ./scripts/deploy-update.sh
